@use 'sass:math';
@import './colors.scss';
@import './breakpoints.scss';

// Define grid variables
$total-columns: 12;
$gutter-width: math.percentage(math.div(0px, 105px));
$container-width: 1440px;
$base-line-height: 16px;
$base-margin: 16px;
$border-radius: 6px;

* {
  box-sizing: border-box;
}

// BODY STYLES
body {
  background-color: $white;
  color: $black;

  @include for-tablet-portrait-down {
    &.noscroll {
      overflow: hidden;
    }
  }

  &.noscroll--mobile {
    @include for-tablet-portrait-down {
      overflow: auto;
    }

    @include for-phone-only {
      overflow: hidden;
    }
  }
}

// MAIN CONTAINER
.flex-container {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  max-width: 1050px;
  margin: 0 auto;
  padding: 0 $base-margin;
  box-sizing: content-box;

  &--large {
    max-width: 1240px;
  }

  @include for-mobile-up {
    padding: 0 $base-margin * 2;
  }

  @include for-tablet-landscape-up {
    padding: 0 $base-margin * 3;
  }

  // Mobile no padding
  &--mobile-no-padding {
    @include for-phone-only {
      padding: 0;
    }
  }

  // Remove padding
  &--no-padding {
    padding: 0;
  }

  // Mobile padding - if --no-padding is used
  &--mobile-padding {
    @include for-phone-only {
      padding: $base-margin;
    }
  }

  // Don't wrap elements
  &--no-wrap {
    flex-wrap: nowrap;
  }

  // Display elements in row
  &--row {
    flex-direction: row;
  }

  // Display elements in row in reverse order
  &--row-reverse {
    flex-direction: row-reverse;
  }

  // Display elements in column
  &--column {
    flex-direction: column;
  }

  // Display elements in column in reverse order
  &--column-reverse {
    flex-direction: column-reverse;
  }

  // Vertical align bottom
  &--align-start {
    align-items: flex-start;
  }

  // Vertical align center
  &--align-center {
    align-items: center;
  }

  // Vertical align top
  &--align-start {
    align-items: flex-start;
  }

  // Vertical align bottom
  &--align-end {
    align-items: flex-end;
  }

  // Horizontal align center
  &--justify {
    justify-content: center;
  }

  // Don't fill space
  &--no-space {
    justify-content: flex-start;
  }

  // Horizontal align left
  &--left {
    justify-content: flex-start;
  }

  // Horizontal align right
  &--right {
    justify-content: flex-end;
  }
}

.flex-col {
  // Columns with gutters
  &--gutter {
    border: solid $base-margin transparent;
    box-sizing: border-box;
  }

  // Column width
  @for $i from 1 to $total-columns + 1 {
    &--#{$i} {
      width: math.percentage(math.div($i, $total-columns));
    }
  }

  &--clear {
    clear: left;
  }

  &--padding-left {
    padding-left: $base-margin * 2;
  }

  &--padding-right {
    padding-right: $base-margin * 2;
  }

  @include for-big-desktop-up {
    &--standard {
      // Column width
      @for $i from 1 to $total-columns + 1 {
        &--#{$i} {
          width: math.percentage(math.div($i, $total-columns));
        }
      }
    }
  }

  @include for-desktop-up {
    &--medium {
      // Column width
      @for $i from 1 to $total-columns + 1 {
        &--#{$i} {
          width: math.percentage(math.div($i, $total-columns));
        }
      }
    }
  }

  @include for-tablet-landscape-down {
    &--tablet-large {
      // Column width
      @for $i from 1 to $total-columns + 1 {
        &--#{$i} {
          width: math.percentage(math.div($i, $total-columns));
        }
      }
    }
  }

  @include for-tablet-portrait-down {
    &--tablet {
      // Column width
      @for $i from 1 to $total-columns + 1 {
        &--#{$i} {
          width: math.percentage(math.div($i, $total-columns));
        }
      }

      &--#{$total-columns} {
        margin-bottom: $base-margin * 1.5;

        &:last-of-type {
          margin-bottom: 0;
        }
      }
    }
  }

  @include for-phone-only {
    width: 100%;
    padding-left: 0;
    padding-right: 0;
    margin-bottom: $base-margin * 1.5;

    &.flex-col--gutter {
      width: 100%;
      border: none;
    }

    &:last-child {
      margin-bottom: 0;
    }

    &--mobile {
      // Column width
      @for $i from 1 to $total-columns + 1 {
        &--#{$i} {
          width: math.percentage(math.div($i, $total-columns));
          margin-bottom: 0;

          &:last-of-type {
            margin-bottom: 0;
          }
        }
      }

      &--#{$total-columns} {
        margin-bottom: $base-margin * 1.5;
      }
    }
  }

  @include for-small-phone {
    &--mobile-small {
      // Column width
      @for $i from 1 to $total-columns + 1 {
        &--#{$i} {
          width: math.percentage(math.div($i, $total-columns));
        }
      }
    }
  }
}

// Flex order
.flex-order {
  @for $i from 1 to 12 {
    &--#{$i} {
      order: $i;
    }
  }

  @include for-tablet-landscape-down {
    &--medium {
      @for $i from 1 to 12 {
        // Column width
        &--#{$i} {
          order: $i;
        }
      }
    }
  }

  @include for-tablet-portrait-down {
    &--tablet {
      @for $i from 1 to 12 {
        // Column width
        &--#{$i} {
          order: $i;
        }
      }
    }
  }

  @include for-phone-only {
    &--mobile {
      @for $i from 1 to 12 {
        // Column width
        &--#{$i} {
          order: $i;
        }
      }
    }
  }
}

// RESPONSIVE
.mobile-show {
  display: none !important;
}

.tablet-show {
  display: none !important;
}

.tablet--large-show {
  display: none !important;
}

.medium-show {
  display: none !important;
}

@include for-tablet-landscape-down {
  .tablet--large-hide {
    display: none !important;
  }
  .tablet--large-show {
    display: block !important;
  }
}

@include for-tablet-portrait-down {
  .tablet-hide {
    display: none !important;
  }
  .tablet-show {
    display: block !important;
  }
}

@include for-phone-only {
  .mobile-hide {
    display: none !important;
  }
  .mobile-show {
    display: block !important;
  }
}

@include for-tablet-landscape-down {
  .medium-hide {
    display: none !important;
  }
  .medium-show {
    display: block !important;
  }
}
